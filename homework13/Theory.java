package de.telran.averchenko.elena.homework13;

public class Theory {

    // 1. Деревья - нелинейные структуры данных, которые имеют иерархическую структуру, и не могут быть зациклены (т.е.
    //    нельзя зациклить ребра, и сделать "круговым" переход между несколькими узлами). Есть корневой узел (тот,
    //    у которого нет предков), родительский, дочерни, листовой (тот, у которого нет детей). Существуют также предки, потомки,
    //    братья и сестры, понятие внутреннего узла и уровня узла (то, что используется не так часто).
    //    У деревьев есть ребра - это ветвь, соединяющая 2 соседних узла; узел - элемент дерева; листовые узлы - они же буез
    //    дочерних узлов; понятие глубина узла (высота узла) - число элементов, отделяющих от корня (от листового элемента);
    //    высота дерева - максимальное расстояние между корнем и листовым элементом.

    // 2. Обход дерева - проход по всем его элементам так, что каждый элемент обрабатывается только 1 раз.
    //    Depth First Search - обход в глубину (вершина - левое - правое поддерево; левое - вершина - правое; левое - правое - вершина).
    //    Breadth First Search - обход в ширину (обход поочередно каждого уровня, и переход на следующий, когда закончатся все
    //    элементы текущего)

    // 3. Бинарное дерево - дерево, в котором для каждого родительского узла может быть максимум 2 дочерних элемента.

    // 4. Циклов у дерева быть не может. Один элемент может быть связан с соседним другим только через ветви, проходясь по предкам.

    // 5. У оного узла может быть только 1 родитель (у этого родителя, однако, может быть несколько детей). Предков у одного
    //    узла может быть несколько. Зависит от уровня, на котором он находится. Может быть родитель, у него еще родитель, а там еще и еще.
    //    а предки - это не только родители, но и все остальные уровни выше "родительского".

    // 6. TreeMap под капотом лежит красно-черное дерево.

    // 7. Красно-черное дерево:
    //    а) У красной вершины дети могут быть только черные
    //    б) Узел всегда имеет 2 потомка
    //    в) Листья - без данных - черные и содержат null, на них могут не выделять памяти, а только ссылка на null
    //    г) Корень дерево черный
    //    д) черная "глубина" дерева всегда одинакова - число черных элементов до корня.
    //    Это двоичное дерево поиска, самобалансирующееся.

}
